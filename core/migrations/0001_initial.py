# Generated by Django 5.0.2 on 2025-05-21 16:20

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Animal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50)),
                ('tipo', models.CharField(choices=[('CACHORRO', 'Cachorro'), ('GATO', 'Gato')], max_length=10)),
                ('dataNascimento', models.DateField(blank=True, null=True)),
                ('idadeEstimada', models.IntegerField(blank=True, help_text='Idade em anos', null=True)),
                ('cor', models.CharField(blank=True, choices=[('PRETO', 'Preto'), ('BRANCO', 'Branco'), ('MARROM', 'Marrom'), ('CINZA', 'Cinza'), ('CARAMELO', 'Caramelo'), ('MESCLADO', 'Mesclado'), ('OUTRO', 'Outro')], max_length=50, null=True)),
                ('comportamento', models.CharField(choices=[('1', 'Dócil'), ('2', 'Agressivo'), ('3', 'Arisco'), ('4', 'Sociável')], max_length=1)),
                ('pelagem', models.CharField(choices=[('1', 'Curta'), ('2', 'Média'), ('3', 'Longa')], max_length=1)),
                ('status', models.CharField(choices=[('DISPONIVEL', 'Disponível'), ('ADOTADO', 'Adotado')], default='DISPONIVEL', max_length=20)),
                ('sexo_atual', models.BooleanField(default=True)),
                ('genero', models.CharField(choices=[('M', 'Macho'), ('F', 'Fêmea')], max_length=1)),
                ('castrado', models.BooleanField(default=False)),
                ('pertence_instituicao', models.BooleanField(default=True)),
                ('entrada_instituicao', models.DateTimeField(auto_now_add=True)),
                ('saida_instituicao', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Endereco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bairro', models.CharField(max_length=100)),
                ('logradouro', models.CharField(max_length=200)),
                ('numero', models.CharField(max_length=10)),
                ('complemento', models.CharField(blank=True, max_length=100, null=True)),
                ('cep', models.CharField(max_length=8)),
            ],
        ),
        migrations.CreateModel(
            name='RacaCachorro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='RacaGato',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vacinas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('telefone', models.CharField(blank=True, max_length=20, null=True)),
                ('profissao', models.CharField(blank=True, max_length=100, null=True)),
                ('estado_civil', models.CharField(blank=True, max_length=20, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Adocao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_requisicao', models.DateTimeField(auto_now_add=True)),
                ('adotante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.animal')),
            ],
        ),
        migrations.CreateModel(
            name='FotoAnimal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foto', models.ImageField(upload_to='animais/')),
                ('is_principal', models.BooleanField(default=False)),
                ('data_upload', models.DateTimeField(auto_now_add=True)),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fotos_set', to='core.animal')),
            ],
            options={
                'ordering': ['-is_principal', '-data_upload'],
            },
        ),
        migrations.CreateModel(
            name='Cachorro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('porte', models.IntegerField(choices=[(1, 'Pequeno'), (2, 'Médio'), (3, 'Grande')])),
                ('animal', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.animal')),
                ('raca', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.racacachorro')),
            ],
        ),
        migrations.CreateModel(
            name='Gato',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('animal', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.animal')),
                ('raca', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.racagato')),
            ],
        ),
        migrations.CreateModel(
            name='Dose',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('data_aplicacao', models.DateField(auto_now_add=True)),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.animal')),
                ('vacina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.vacinas')),
            ],
        ),
    ]
